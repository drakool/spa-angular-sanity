{"ast":null,"code":"import { processOptions, validateOptions } from './_chunks/defaultOptionsValidator-f87a8c35.js';\nimport parseHeaders from 'parse-headers';\nconst middlewareReducer = middleware => function applyMiddleware(hook, defaultValue) {\n  const bailEarly = hook === \"onError\";\n  let value = defaultValue;\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  for (let i = 0; i < middleware[hook].length; i++) {\n    const handler = middleware[hook][i];\n    value = handler(value, ...args);\n    if (bailEarly && !value) {\n      break;\n    }\n  }\n  return value;\n};\nfunction createPubSub() {\n  const subscribers = /* @__PURE__ */Object.create(null);\n  let nextId = 0;\n  function subscribe(subscriber) {\n    const id = nextId++;\n    subscribers[id] = subscriber;\n    return function unsubscribe() {\n      delete subscribers[id];\n    };\n  }\n  function publish(event) {\n    for (const id in subscribers) {\n      subscribers[id](event);\n    }\n  }\n  return {\n    publish,\n    subscribe\n  };\n}\nconst channelNames = [\"request\", \"response\", \"progress\", \"error\", \"abort\"];\nconst middlehooks = [\"processOptions\", \"validateOptions\", \"interceptRequest\", \"finalizeOptions\", \"onRequest\", \"onResponse\", \"onError\", \"onReturn\", \"onHeaders\"];\nfunction createRequester(initMiddleware, httpRequest) {\n  const loadedMiddleware = [];\n  const middleware = middlehooks.reduce((ware, name) => {\n    ware[name] = ware[name] || [];\n    return ware;\n  }, {\n    processOptions: [processOptions],\n    validateOptions: [validateOptions]\n  });\n  function request(opts) {\n    const onResponse = (reqErr, res, ctx) => {\n      let error = reqErr;\n      let response = res;\n      if (!error) {\n        try {\n          response = applyMiddleware(\"onResponse\", res, ctx);\n        } catch (err) {\n          response = null;\n          error = err;\n        }\n      }\n      error = error && applyMiddleware(\"onError\", error, ctx);\n      if (error) {\n        channels.error.publish(error);\n      } else if (response) {\n        channels.response.publish(response);\n      }\n    };\n    const channels = channelNames.reduce((target, name) => {\n      target[name] = createPubSub();\n      return target;\n    }, {});\n    const applyMiddleware = middlewareReducer(middleware);\n    const options = applyMiddleware(\"processOptions\", opts);\n    applyMiddleware(\"validateOptions\", options);\n    const context = {\n      options,\n      channels,\n      applyMiddleware\n    };\n    let ongoingRequest;\n    const unsubscribe = channels.request.subscribe(ctx => {\n      ongoingRequest = httpRequest(ctx, (err, res) => onResponse(err, res, ctx));\n    });\n    channels.abort.subscribe(() => {\n      unsubscribe();\n      if (ongoingRequest) {\n        ongoingRequest.abort();\n      }\n    });\n    const returnValue = applyMiddleware(\"onReturn\", channels, context);\n    if (returnValue === channels) {\n      channels.request.publish(context);\n    }\n    return returnValue;\n  }\n  request.use = function use(newMiddleware) {\n    if (!newMiddleware) {\n      throw new Error(\"Tried to add middleware that resolved to falsey value\");\n    }\n    if (typeof newMiddleware === \"function\") {\n      throw new Error(\"Tried to add middleware that was a function. It probably expects you to pass options to it.\");\n    }\n    if (newMiddleware.onReturn && middleware.onReturn.length > 0) {\n      throw new Error(\"Tried to add new middleware with `onReturn` handler, but another handler has already been registered for this event\");\n    }\n    middlehooks.forEach(key => {\n      if (newMiddleware[key]) {\n        middleware[key].push(newMiddleware[key]);\n      }\n    });\n    loadedMiddleware.push(newMiddleware);\n    return request;\n  };\n  request.clone = () => createRequester(loadedMiddleware, httpRequest);\n  initMiddleware.forEach(request.use);\n  return request;\n}\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _method, _url, _resHeaders, _headers, _controller, _init;\nclass FetchXhr {\n  constructor() {\n    /**\n     * Public interface, interop with real XMLHttpRequest\n     */\n    __publicField(this, \"onabort\");\n    __publicField(this, \"onerror\");\n    __publicField(this, \"onreadystatechange\");\n    __publicField(this, \"ontimeout\");\n    /**\n     * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n     */\n    __publicField(this, \"readyState\", 0);\n    __publicField(this, \"response\");\n    __publicField(this, \"responseText\");\n    __publicField(this, \"responseType\", \"\");\n    __publicField(this, \"status\");\n    __publicField(this, \"statusText\");\n    __publicField(this, \"withCredentials\");\n    /**\n     * Private implementation details\n     */\n    __privateAdd(this, _method, void 0);\n    __privateAdd(this, _url, void 0);\n    __privateAdd(this, _resHeaders, void 0);\n    __privateAdd(this, _headers, {});\n    __privateAdd(this, _controller, void 0);\n    __privateAdd(this, _init, {});\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- _async is only declared for typings compatibility\n  open(method, url, _async) {\n    __privateSet(this, _method, method);\n    __privateSet(this, _url, url);\n    __privateSet(this, _resHeaders, \"\");\n    this.readyState = 1;\n    this.onreadystatechange();\n    __privateSet(this, _controller, void 0);\n  }\n  abort() {\n    if (__privateGet(this, _controller)) {\n      __privateGet(this, _controller).abort();\n    }\n  }\n  getAllResponseHeaders() {\n    return __privateGet(this, _resHeaders);\n  }\n  setRequestHeader(name, value) {\n    __privateGet(this, _headers)[name] = value;\n  }\n  // Allow setting extra fetch init options, needed for runtimes such as Vercel Edge to set `cache` and other options in React Server Components\n  setInit(init) {\n    __privateSet(this, _init, init);\n  }\n  send(body) {\n    const textBody = this.responseType !== \"arraybuffer\";\n    const options = {\n      ...__privateGet(this, _init),\n      method: __privateGet(this, _method),\n      headers: __privateGet(this, _headers),\n      body\n    };\n    if (typeof AbortController === \"function\") {\n      __privateSet(this, _controller, new AbortController());\n      if (typeof EventTarget !== \"undefined\" && __privateGet(this, _controller).signal instanceof EventTarget) {\n        options.signal = __privateGet(this, _controller).signal;\n      }\n    }\n    if (typeof document !== \"undefined\") {\n      options.credentials = this.withCredentials ? \"include\" : \"omit\";\n    }\n    fetch(__privateGet(this, _url), options).then(res => {\n      res.headers.forEach((value, key) => {\n        __privateSet(this, _resHeaders, __privateGet(this, _resHeaders) + \"\".concat(key, \": \").concat(value, \"\\r\\n\"));\n      });\n      this.status = res.status;\n      this.statusText = res.statusText;\n      this.readyState = 3;\n      return textBody ? res.text() : res.arrayBuffer();\n    }).then(resBody => {\n      if (typeof resBody === \"string\") {\n        this.responseText = resBody;\n      } else {\n        this.response = resBody;\n      }\n      this.readyState = 4;\n      this.onreadystatechange();\n    }).catch(err => {\n      var _a;\n      if (err.name === \"AbortError\") {\n        this.onabort();\n        return;\n      }\n      (_a = this.onerror) == null ? void 0 : _a.call(this, err);\n    });\n  }\n}\n_method = new WeakMap();\n_url = new WeakMap();\n_resHeaders = new WeakMap();\n_headers = new WeakMap();\n_controller = new WeakMap();\n_init = new WeakMap();\nconst adapter = typeof XMLHttpRequest === \"function\" ? \"xhr\" : \"fetch\";\nconst XmlHttpRequest = adapter === \"xhr\" ? XMLHttpRequest : FetchXhr;\nconst httpRequester = (context, callback) => {\n  const opts = context.options;\n  const options = context.applyMiddleware(\"finalizeOptions\", opts);\n  const timers = {};\n  const injectedResponse = context.applyMiddleware(\"interceptRequest\", void 0, {\n    adapter,\n    context\n  });\n  if (injectedResponse) {\n    const cbTimer = setTimeout(callback, 0, null, injectedResponse);\n    const cancel = () => clearTimeout(cbTimer);\n    return {\n      abort: cancel\n    };\n  }\n  let xhr = new XmlHttpRequest();\n  if (xhr instanceof FetchXhr && typeof options.fetch === \"object\") {\n    xhr.setInit(options.fetch);\n  }\n  const headers = options.headers;\n  const delays = options.timeout;\n  let aborted = false;\n  let loaded = false;\n  let timedOut = false;\n  xhr.onerror = event => {\n    onError(new Error(\"Request error while attempting to reach \".concat(options.url).concat(event.lengthComputable ? \"(\".concat(event.loaded, \" of \").concat(event.total, \" bytes transferred)\") : \"\")));\n  };\n  xhr.ontimeout = event => {\n    onError(new Error(\"Request timeout while attempting to reach \".concat(options.url).concat(event.lengthComputable ? \"(\".concat(event.loaded, \" of \").concat(event.total, \" bytes transferred)\") : \"\")));\n  };\n  xhr.onabort = () => {\n    stopTimers(true);\n    aborted = true;\n  };\n  xhr.onreadystatechange = () => {\n    resetTimers();\n    if (aborted || xhr.readyState !== 4) {\n      return;\n    }\n    if (xhr.status === 0) {\n      return;\n    }\n    onLoad();\n  };\n  xhr.open(options.method, options.url, true\n  // Always async\n  );\n\n  xhr.withCredentials = !!options.withCredentials;\n  if (headers && xhr.setRequestHeader) {\n    for (const key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n  if (options.rawBody) {\n    xhr.responseType = \"arraybuffer\";\n  }\n  context.applyMiddleware(\"onRequest\", {\n    options,\n    adapter,\n    request: xhr,\n    context\n  });\n  xhr.send(options.body || null);\n  if (delays) {\n    timers.connect = setTimeout(() => timeoutRequest(\"ETIMEDOUT\"), delays.connect);\n  }\n  return {\n    abort\n  };\n  function abort() {\n    aborted = true;\n    if (xhr) {\n      xhr.abort();\n    }\n  }\n  function timeoutRequest(code) {\n    timedOut = true;\n    xhr.abort();\n    const error = new Error(code === \"ESOCKETTIMEDOUT\" ? \"Socket timed out on request to \".concat(options.url) : \"Connection timed out on request to \".concat(options.url));\n    error.code = code;\n    context.channels.error.publish(error);\n  }\n  function resetTimers() {\n    if (!delays) {\n      return;\n    }\n    stopTimers();\n    timers.socket = setTimeout(() => timeoutRequest(\"ESOCKETTIMEDOUT\"), delays.socket);\n  }\n  function stopTimers(force) {\n    if (force || aborted || xhr.readyState >= 2 && timers.connect) {\n      clearTimeout(timers.connect);\n    }\n    if (timers.socket) {\n      clearTimeout(timers.socket);\n    }\n  }\n  function onError(error) {\n    if (loaded) {\n      return;\n    }\n    stopTimers(true);\n    loaded = true;\n    xhr = null;\n    const err = error || new Error(\"Network error while attempting to reach \".concat(options.url));\n    err.isNetworkError = true;\n    err.request = options;\n    callback(err);\n  }\n  function reduceResponse() {\n    return {\n      body: xhr.response || (xhr.responseType === \"\" || xhr.responseType === \"text\" ? xhr.responseText : \"\"),\n      url: options.url,\n      method: options.method,\n      headers: parseHeaders(xhr.getAllResponseHeaders()),\n      statusCode: xhr.status,\n      statusMessage: xhr.statusText\n    };\n  }\n  function onLoad() {\n    if (aborted || loaded || timedOut) {\n      return;\n    }\n    if (xhr.status === 0) {\n      onError(new Error(\"Unknown XHR error\"));\n      return;\n    }\n    stopTimers();\n    loaded = true;\n    callback(null, reduceResponse());\n  }\n};\nconst getIt = function () {\n  let initMiddleware = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let httpRequest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : httpRequester;\n  return createRequester(initMiddleware, httpRequest);\n};\nconst environment = \"browser\";\nexport { adapter, environment, getIt };","map":{"version":3,"names":["processOptions","validateOptions","parseHeaders","middlewareReducer","middleware","applyMiddleware","hook","defaultValue","bailEarly","value","_len","arguments","length","args","Array","_key","i","handler","createPubSub","subscribers","Object","create","nextId","subscribe","subscriber","id","unsubscribe","publish","event","channelNames","middlehooks","createRequester","initMiddleware","httpRequest","loadedMiddleware","reduce","ware","name","request","opts","onResponse","reqErr","res","ctx","error","response","err","channels","target","options","context","ongoingRequest","abort","returnValue","use","newMiddleware","Error","onReturn","forEach","key","push","clone","__defProp","defineProperty","__defNormalProp","obj","enumerable","configurable","writable","__publicField","__accessCheck","member","msg","has","TypeError","__privateGet","getter","call","get","__privateAdd","WeakSet","add","set","__privateSet","setter","_method","_url","_resHeaders","_headers","_controller","_init","FetchXhr","constructor","open","method","url","_async","readyState","onreadystatechange","getAllResponseHeaders","setRequestHeader","setInit","init","send","body","textBody","responseType","headers","AbortController","EventTarget","signal","document","credentials","withCredentials","fetch","then","concat","status","statusText","text","arrayBuffer","resBody","responseText","catch","_a","onabort","onerror","WeakMap","adapter","XMLHttpRequest","XmlHttpRequest","httpRequester","callback","timers","injectedResponse","cbTimer","setTimeout","cancel","clearTimeout","xhr","delays","timeout","aborted","loaded","timedOut","onError","lengthComputable","total","ontimeout","stopTimers","resetTimers","onLoad","hasOwnProperty","rawBody","connect","timeoutRequest","code","socket","force","isNetworkError","reduceResponse","statusCode","statusMessage","getIt","undefined","environment"],"sources":["/Users/hany/work/development/angular/tutorials/spa-angular-sanity/node_modules/get-it/dist/index.browser.js"],"sourcesContent":["import { processOptions, validateOptions } from './_chunks/defaultOptionsValidator-f87a8c35.js';\nimport parseHeaders from 'parse-headers';\nconst middlewareReducer = middleware => function applyMiddleware(hook, defaultValue) {\n  const bailEarly = hook === \"onError\";\n  let value = defaultValue;\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n  for (let i = 0; i < middleware[hook].length; i++) {\n    const handler = middleware[hook][i];\n    value = handler(value, ...args);\n    if (bailEarly && !value) {\n      break;\n    }\n  }\n  return value;\n};\nfunction createPubSub() {\n  const subscribers = /* @__PURE__ */Object.create(null);\n  let nextId = 0;\n  function subscribe(subscriber) {\n    const id = nextId++;\n    subscribers[id] = subscriber;\n    return function unsubscribe() {\n      delete subscribers[id];\n    };\n  }\n  function publish(event) {\n    for (const id in subscribers) {\n      subscribers[id](event);\n    }\n  }\n  return {\n    publish,\n    subscribe\n  };\n}\nconst channelNames = [\"request\", \"response\", \"progress\", \"error\", \"abort\"];\nconst middlehooks = [\"processOptions\", \"validateOptions\", \"interceptRequest\", \"finalizeOptions\", \"onRequest\", \"onResponse\", \"onError\", \"onReturn\", \"onHeaders\"];\nfunction createRequester(initMiddleware, httpRequest) {\n  const loadedMiddleware = [];\n  const middleware = middlehooks.reduce((ware, name) => {\n    ware[name] = ware[name] || [];\n    return ware;\n  }, {\n    processOptions: [processOptions],\n    validateOptions: [validateOptions]\n  });\n  function request(opts) {\n    const onResponse = (reqErr, res, ctx) => {\n      let error = reqErr;\n      let response = res;\n      if (!error) {\n        try {\n          response = applyMiddleware(\"onResponse\", res, ctx);\n        } catch (err) {\n          response = null;\n          error = err;\n        }\n      }\n      error = error && applyMiddleware(\"onError\", error, ctx);\n      if (error) {\n        channels.error.publish(error);\n      } else if (response) {\n        channels.response.publish(response);\n      }\n    };\n    const channels = channelNames.reduce((target, name) => {\n      target[name] = createPubSub();\n      return target;\n    }, {});\n    const applyMiddleware = middlewareReducer(middleware);\n    const options = applyMiddleware(\"processOptions\", opts);\n    applyMiddleware(\"validateOptions\", options);\n    const context = {\n      options,\n      channels,\n      applyMiddleware\n    };\n    let ongoingRequest;\n    const unsubscribe = channels.request.subscribe(ctx => {\n      ongoingRequest = httpRequest(ctx, (err, res) => onResponse(err, res, ctx));\n    });\n    channels.abort.subscribe(() => {\n      unsubscribe();\n      if (ongoingRequest) {\n        ongoingRequest.abort();\n      }\n    });\n    const returnValue = applyMiddleware(\"onReturn\", channels, context);\n    if (returnValue === channels) {\n      channels.request.publish(context);\n    }\n    return returnValue;\n  }\n  request.use = function use(newMiddleware) {\n    if (!newMiddleware) {\n      throw new Error(\"Tried to add middleware that resolved to falsey value\");\n    }\n    if (typeof newMiddleware === \"function\") {\n      throw new Error(\"Tried to add middleware that was a function. It probably expects you to pass options to it.\");\n    }\n    if (newMiddleware.onReturn && middleware.onReturn.length > 0) {\n      throw new Error(\"Tried to add new middleware with `onReturn` handler, but another handler has already been registered for this event\");\n    }\n    middlehooks.forEach(key => {\n      if (newMiddleware[key]) {\n        middleware[key].push(newMiddleware[key]);\n      }\n    });\n    loadedMiddleware.push(newMiddleware);\n    return request;\n  };\n  request.clone = () => createRequester(loadedMiddleware, httpRequest);\n  initMiddleware.forEach(request.use);\n  return request;\n}\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj)) throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj)) throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar _method, _url, _resHeaders, _headers, _controller, _init;\nclass FetchXhr {\n  constructor() {\n    /**\n     * Public interface, interop with real XMLHttpRequest\n     */\n    __publicField(this, \"onabort\");\n    __publicField(this, \"onerror\");\n    __publicField(this, \"onreadystatechange\");\n    __publicField(this, \"ontimeout\");\n    /**\n     * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n     */\n    __publicField(this, \"readyState\", 0);\n    __publicField(this, \"response\");\n    __publicField(this, \"responseText\");\n    __publicField(this, \"responseType\", \"\");\n    __publicField(this, \"status\");\n    __publicField(this, \"statusText\");\n    __publicField(this, \"withCredentials\");\n    /**\n     * Private implementation details\n     */\n    __privateAdd(this, _method, void 0);\n    __privateAdd(this, _url, void 0);\n    __privateAdd(this, _resHeaders, void 0);\n    __privateAdd(this, _headers, {});\n    __privateAdd(this, _controller, void 0);\n    __privateAdd(this, _init, {});\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars -- _async is only declared for typings compatibility\n  open(method, url, _async) {\n    __privateSet(this, _method, method);\n    __privateSet(this, _url, url);\n    __privateSet(this, _resHeaders, \"\");\n    this.readyState = 1;\n    this.onreadystatechange();\n    __privateSet(this, _controller, void 0);\n  }\n  abort() {\n    if (__privateGet(this, _controller)) {\n      __privateGet(this, _controller).abort();\n    }\n  }\n  getAllResponseHeaders() {\n    return __privateGet(this, _resHeaders);\n  }\n  setRequestHeader(name, value) {\n    __privateGet(this, _headers)[name] = value;\n  }\n  // Allow setting extra fetch init options, needed for runtimes such as Vercel Edge to set `cache` and other options in React Server Components\n  setInit(init) {\n    __privateSet(this, _init, init);\n  }\n  send(body) {\n    const textBody = this.responseType !== \"arraybuffer\";\n    const options = {\n      ...__privateGet(this, _init),\n      method: __privateGet(this, _method),\n      headers: __privateGet(this, _headers),\n      body\n    };\n    if (typeof AbortController === \"function\") {\n      __privateSet(this, _controller, new AbortController());\n      if (typeof EventTarget !== \"undefined\" && __privateGet(this, _controller).signal instanceof EventTarget) {\n        options.signal = __privateGet(this, _controller).signal;\n      }\n    }\n    if (typeof document !== \"undefined\") {\n      options.credentials = this.withCredentials ? \"include\" : \"omit\";\n    }\n    fetch(__privateGet(this, _url), options).then(res => {\n      res.headers.forEach((value, key) => {\n        __privateSet(this, _resHeaders, __privateGet(this, _resHeaders) + \"\".concat(key, \": \").concat(value, \"\\r\\n\"));\n      });\n      this.status = res.status;\n      this.statusText = res.statusText;\n      this.readyState = 3;\n      return textBody ? res.text() : res.arrayBuffer();\n    }).then(resBody => {\n      if (typeof resBody === \"string\") {\n        this.responseText = resBody;\n      } else {\n        this.response = resBody;\n      }\n      this.readyState = 4;\n      this.onreadystatechange();\n    }).catch(err => {\n      var _a;\n      if (err.name === \"AbortError\") {\n        this.onabort();\n        return;\n      }\n      (_a = this.onerror) == null ? void 0 : _a.call(this, err);\n    });\n  }\n}\n_method = new WeakMap();\n_url = new WeakMap();\n_resHeaders = new WeakMap();\n_headers = new WeakMap();\n_controller = new WeakMap();\n_init = new WeakMap();\nconst adapter = typeof XMLHttpRequest === \"function\" ? \"xhr\" : \"fetch\";\nconst XmlHttpRequest = adapter === \"xhr\" ? XMLHttpRequest : FetchXhr;\nconst httpRequester = (context, callback) => {\n  const opts = context.options;\n  const options = context.applyMiddleware(\"finalizeOptions\", opts);\n  const timers = {};\n  const injectedResponse = context.applyMiddleware(\"interceptRequest\", void 0, {\n    adapter,\n    context\n  });\n  if (injectedResponse) {\n    const cbTimer = setTimeout(callback, 0, null, injectedResponse);\n    const cancel = () => clearTimeout(cbTimer);\n    return {\n      abort: cancel\n    };\n  }\n  let xhr = new XmlHttpRequest();\n  if (xhr instanceof FetchXhr && typeof options.fetch === \"object\") {\n    xhr.setInit(options.fetch);\n  }\n  const headers = options.headers;\n  const delays = options.timeout;\n  let aborted = false;\n  let loaded = false;\n  let timedOut = false;\n  xhr.onerror = event => {\n    onError(new Error(\"Request error while attempting to reach \".concat(options.url).concat(event.lengthComputable ? \"(\".concat(event.loaded, \" of \").concat(event.total, \" bytes transferred)\") : \"\")));\n  };\n  xhr.ontimeout = event => {\n    onError(new Error(\"Request timeout while attempting to reach \".concat(options.url).concat(event.lengthComputable ? \"(\".concat(event.loaded, \" of \").concat(event.total, \" bytes transferred)\") : \"\")));\n  };\n  xhr.onabort = () => {\n    stopTimers(true);\n    aborted = true;\n  };\n  xhr.onreadystatechange = () => {\n    resetTimers();\n    if (aborted || xhr.readyState !== 4) {\n      return;\n    }\n    if (xhr.status === 0) {\n      return;\n    }\n    onLoad();\n  };\n  xhr.open(options.method, options.url, true\n  // Always async\n  );\n\n  xhr.withCredentials = !!options.withCredentials;\n  if (headers && xhr.setRequestHeader) {\n    for (const key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n  if (options.rawBody) {\n    xhr.responseType = \"arraybuffer\";\n  }\n  context.applyMiddleware(\"onRequest\", {\n    options,\n    adapter,\n    request: xhr,\n    context\n  });\n  xhr.send(options.body || null);\n  if (delays) {\n    timers.connect = setTimeout(() => timeoutRequest(\"ETIMEDOUT\"), delays.connect);\n  }\n  return {\n    abort\n  };\n  function abort() {\n    aborted = true;\n    if (xhr) {\n      xhr.abort();\n    }\n  }\n  function timeoutRequest(code) {\n    timedOut = true;\n    xhr.abort();\n    const error = new Error(code === \"ESOCKETTIMEDOUT\" ? \"Socket timed out on request to \".concat(options.url) : \"Connection timed out on request to \".concat(options.url));\n    error.code = code;\n    context.channels.error.publish(error);\n  }\n  function resetTimers() {\n    if (!delays) {\n      return;\n    }\n    stopTimers();\n    timers.socket = setTimeout(() => timeoutRequest(\"ESOCKETTIMEDOUT\"), delays.socket);\n  }\n  function stopTimers(force) {\n    if (force || aborted || xhr.readyState >= 2 && timers.connect) {\n      clearTimeout(timers.connect);\n    }\n    if (timers.socket) {\n      clearTimeout(timers.socket);\n    }\n  }\n  function onError(error) {\n    if (loaded) {\n      return;\n    }\n    stopTimers(true);\n    loaded = true;\n    xhr = null;\n    const err = error || new Error(\"Network error while attempting to reach \".concat(options.url));\n    err.isNetworkError = true;\n    err.request = options;\n    callback(err);\n  }\n  function reduceResponse() {\n    return {\n      body: xhr.response || (xhr.responseType === \"\" || xhr.responseType === \"text\" ? xhr.responseText : \"\"),\n      url: options.url,\n      method: options.method,\n      headers: parseHeaders(xhr.getAllResponseHeaders()),\n      statusCode: xhr.status,\n      statusMessage: xhr.statusText\n    };\n  }\n  function onLoad() {\n    if (aborted || loaded || timedOut) {\n      return;\n    }\n    if (xhr.status === 0) {\n      onError(new Error(\"Unknown XHR error\"));\n      return;\n    }\n    stopTimers();\n    loaded = true;\n    callback(null, reduceResponse());\n  }\n};\nconst getIt = function () {\n  let initMiddleware = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let httpRequest = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : httpRequester;\n  return createRequester(initMiddleware, httpRequest);\n};\nconst environment = \"browser\";\nexport { adapter, environment, getIt };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}