{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.SanityImageUrlBuilder = factory());\n})(this, function () {\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg';\n  function parseAssetId(ref) {\n    var _ref$split = ref.split('-'),\n      id = _ref$split[1],\n      dimensionString = _ref$split[2],\n      format = _ref$split[3];\n    if (!id || !dimensionString || !format) {\n      throw new Error(\"Malformed asset _ref '\" + ref + \"'. Expected an id like \\\"\" + example + \"\\\".\");\n    }\n    var _dimensionString$spli = dimensionString.split('x'),\n      imgWidthStr = _dimensionString$spli[0],\n      imgHeightStr = _dimensionString$spli[1];\n    var width = +imgWidthStr;\n    var height = +imgHeightStr;\n    var isValidAssetId = isFinite(width) && isFinite(height);\n    if (!isValidAssetId) {\n      throw new Error(\"Malformed asset _ref '\" + ref + \"'. Expected an id like \\\"\" + example + \"\\\".\");\n    }\n    return {\n      id: id,\n      width: width,\n      height: height,\n      format: format\n    };\n  }\n  var isRef = function isRef(src) {\n    var source = src;\n    return source ? typeof source._ref === 'string' : false;\n  };\n  var isAsset = function isAsset(src) {\n    var source = src;\n    return source ? typeof source._id === 'string' : false;\n  };\n  var isAssetStub = function isAssetStub(src) {\n    var source = src;\n    return source && source.asset ? typeof source.asset.url === 'string' : false;\n  }; // Convert an asset-id, asset or image to an image record suitable for processing\n  // eslint-disable-next-line complexity\n\n  function parseSource(source) {\n    if (!source) {\n      return null;\n    }\n    var image;\n    if (typeof source === 'string' && isUrl(source)) {\n      // Someone passed an existing image url?\n      image = {\n        asset: {\n          _ref: urlToId(source)\n        }\n      };\n    } else if (typeof source === 'string') {\n      // Just an asset id\n      image = {\n        asset: {\n          _ref: source\n        }\n      };\n    } else if (isRef(source)) {\n      // We just got passed an asset directly\n      image = {\n        asset: source\n      };\n    } else if (isAsset(source)) {\n      // If we were passed an image asset document\n      image = {\n        asset: {\n          _ref: source._id || ''\n        }\n      };\n    } else if (isAssetStub(source)) {\n      // If we were passed a partial asset (`url`, but no `_id`)\n      image = {\n        asset: {\n          _ref: urlToId(source.asset.url)\n        }\n      };\n    } else if (typeof source.asset === 'object') {\n      // Probably an actual image with materialized asset\n      image = _extends({}, source);\n    } else {\n      // We got something that does not look like an image, or it is an image\n      // that currently isn't sporting an asset.\n      return null;\n    }\n    var img = source;\n    if (img.crop) {\n      image.crop = img.crop;\n    }\n    if (img.hotspot) {\n      image.hotspot = img.hotspot;\n    }\n    return applyDefaults(image);\n  }\n  function isUrl(url) {\n    return /^https?:\\/\\//.test(\"\" + url);\n  }\n  function urlToId(url) {\n    var parts = url.split('/').slice(-1);\n    return (\"image-\" + parts[0]).replace(/\\.([a-z]+)$/, '-$1');\n  } // Mock crop and hotspot if image lacks it\n\n  function applyDefaults(image) {\n    if (image.crop && image.hotspot) {\n      return image;\n    } // We need to pad in default values for crop or hotspot\n\n    var result = _extends({}, image);\n    if (!result.crop) {\n      result.crop = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0\n      };\n    }\n    if (!result.hotspot) {\n      result.hotspot = {\n        x: 0.5,\n        y: 0.5,\n        height: 1.0,\n        width: 1.0\n      };\n    }\n    return result;\n  }\n  var SPEC_NAME_TO_URL_NAME_MAPPINGS = [['width', 'w'], ['height', 'h'], ['format', 'fm'], ['download', 'dl'], ['blur', 'blur'], ['sharpen', 'sharp'], ['invert', 'invert'], ['orientation', 'or'], ['minHeight', 'min-h'], ['maxHeight', 'max-h'], ['minWidth', 'min-w'], ['maxWidth', 'max-w'], ['quality', 'q'], ['fit', 'fit'], ['crop', 'crop'], ['saturation', 'sat'], ['auto', 'auto'], ['dpr', 'dpr'], ['pad', 'pad']];\n  function urlForImage(options) {\n    var spec = _extends({}, options || {});\n    var source = spec.source;\n    delete spec.source;\n    var image = parseSource(source);\n    if (!image) {\n      throw new Error(\"Unable to resolve image URL from source (\" + JSON.stringify(source) + \")\");\n    }\n    var id = image.asset._ref || image.asset._id || '';\n    var asset = parseAssetId(id); // Compute crop rect in terms of pixel coordinates in the raw source image\n\n    var cropLeft = Math.round(image.crop.left * asset.width);\n    var cropTop = Math.round(image.crop.top * asset.height);\n    var crop = {\n      left: cropLeft,\n      top: cropTop,\n      width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n      height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop)\n    }; // Compute hot spot rect in terms of pixel coordinates\n\n    var hotSpotVerticalRadius = image.hotspot.height * asset.height / 2;\n    var hotSpotHorizontalRadius = image.hotspot.width * asset.width / 2;\n    var hotSpotCenterX = image.hotspot.x * asset.width;\n    var hotSpotCenterY = image.hotspot.y * asset.height;\n    var hotspot = {\n      left: hotSpotCenterX - hotSpotHorizontalRadius,\n      top: hotSpotCenterY - hotSpotVerticalRadius,\n      right: hotSpotCenterX + hotSpotHorizontalRadius,\n      bottom: hotSpotCenterY + hotSpotVerticalRadius\n    }; // If irrelevant, or if we are requested to: don't perform crop/fit based on\n    // the crop/hotspot.\n\n    if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n      spec = _extends({}, spec, fit({\n        crop: crop,\n        hotspot: hotspot\n      }, spec));\n    }\n    return specToImageUrl(_extends({}, spec, {\n      asset: asset\n    }));\n  } // eslint-disable-next-line complexity\n\n  function specToImageUrl(spec) {\n    var cdnUrl = (spec.baseUrl || 'https://cdn.sanity.io').replace(/\\/+$/, '');\n    var filename = spec.asset.id + \"-\" + spec.asset.width + \"x\" + spec.asset.height + \".\" + spec.asset.format;\n    var baseUrl = cdnUrl + \"/images/\" + spec.projectId + \"/\" + spec.dataset + \"/\" + filename;\n    var params = [];\n    if (spec.rect) {\n      // Only bother url with a crop if it actually crops anything\n      var _spec$rect = spec.rect,\n        left = _spec$rect.left,\n        top = _spec$rect.top,\n        width = _spec$rect.width,\n        height = _spec$rect.height;\n      var isEffectiveCrop = left !== 0 || top !== 0 || height !== spec.asset.height || width !== spec.asset.width;\n      if (isEffectiveCrop) {\n        params.push(\"rect=\" + left + \",\" + top + \",\" + width + \",\" + height);\n      }\n    }\n    if (spec.bg) {\n      params.push(\"bg=\" + spec.bg);\n    }\n    if (spec.focalPoint) {\n      params.push(\"fp-x=\" + spec.focalPoint.x);\n      params.push(\"fp-y=\" + spec.focalPoint.y);\n    }\n    var flip = [spec.flipHorizontal && 'h', spec.flipVertical && 'v'].filter(Boolean).join('');\n    if (flip) {\n      params.push(\"flip=\" + flip);\n    } // Map from spec name to url param name, and allow using the actual param name as an alternative\n\n    SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function (mapping) {\n      var specName = mapping[0],\n        param = mapping[1];\n      if (typeof spec[specName] !== 'undefined') {\n        params.push(param + \"=\" + encodeURIComponent(spec[specName]));\n      } else if (typeof spec[param] !== 'undefined') {\n        params.push(param + \"=\" + encodeURIComponent(spec[param]));\n      }\n    });\n    if (params.length === 0) {\n      return baseUrl;\n    }\n    return baseUrl + \"?\" + params.join('&');\n  }\n  function fit(source, spec) {\n    var cropRect;\n    var imgWidth = spec.width;\n    var imgHeight = spec.height; // If we are not constraining the aspect ratio, we'll just use the whole crop\n\n    if (!(imgWidth && imgHeight)) {\n      return {\n        width: imgWidth,\n        height: imgHeight,\n        rect: source.crop\n      };\n    }\n    var crop = source.crop;\n    var hotspot = source.hotspot; // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n\n    var desiredAspectRatio = imgWidth / imgHeight;\n    var cropAspectRatio = crop.width / crop.height;\n    if (cropAspectRatio > desiredAspectRatio) {\n      // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n      var height = Math.round(crop.height);\n      var width = Math.round(height * desiredAspectRatio);\n      var top = Math.max(0, Math.round(crop.top)); // Center output horizontally over hotspot\n\n      var hotspotXCenter = Math.round((hotspot.right - hotspot.left) / 2 + hotspot.left);\n      var left = Math.max(0, Math.round(hotspotXCenter - width / 2)); // Keep output within crop\n\n      if (left < crop.left) {\n        left = crop.left;\n      } else if (left + width > crop.left + crop.width) {\n        left = crop.left + crop.width - width;\n      }\n      cropRect = {\n        left: left,\n        top: top,\n        width: width,\n        height: height\n      };\n    } else {\n      // The crop is taller than the desired ratio, we are cutting from top and bottom\n      var _width = crop.width;\n      var _height = Math.round(_width / desiredAspectRatio);\n      var _left = Math.max(0, Math.round(crop.left)); // Center output vertically over hotspot\n\n      var hotspotYCenter = Math.round((hotspot.bottom - hotspot.top) / 2 + hotspot.top);\n      var _top = Math.max(0, Math.round(hotspotYCenter - _height / 2)); // Keep output rect within crop\n\n      if (_top < crop.top) {\n        _top = crop.top;\n      } else if (_top + _height > crop.top + crop.height) {\n        _top = crop.top + crop.height - _height;\n      }\n      cropRect = {\n        left: _left,\n        top: _top,\n        width: _width,\n        height: _height\n      };\n    }\n    return {\n      width: imgWidth,\n      height: imgHeight,\n      rect: cropRect\n    };\n  } // For backwards-compatibility\n\n  var validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min'];\n  var validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy'];\n  var validAutoModes = ['format'];\n  function isSanityModernClientLike(client) {\n    return client && 'config' in client ? typeof client.config === 'function' : false;\n  }\n  function isSanityClientLike(client) {\n    return client && 'clientConfig' in client ? typeof client.clientConfig === 'object' : false;\n  }\n  function rewriteSpecName(key) {\n    var specs = SPEC_NAME_TO_URL_NAME_MAPPINGS;\n    for (var _iterator = _createForOfIteratorHelperLoose(specs), _step; !(_step = _iterator()).done;) {\n      var entry = _step.value;\n      var specName = entry[0],\n        param = entry[1];\n      if (key === specName || key === param) {\n        return specName;\n      }\n    }\n    return key;\n  }\n  function urlBuilder(options) {\n    // Did we get a modernish client?\n    if (isSanityModernClientLike(options)) {\n      // Inherit config from client\n      var _options$config = options.config(),\n        apiUrl = _options$config.apiHost,\n        projectId = _options$config.projectId,\n        dataset = _options$config.dataset;\n      var apiHost = apiUrl || 'https://api.sanity.io';\n      return new ImageUrlBuilder(null, {\n        baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n        projectId: projectId,\n        dataset: dataset\n      });\n    } // Did we get a SanityClient?\n\n    var client = options;\n    if (isSanityClientLike(client)) {\n      // Inherit config from client\n      var _client$clientConfig = client.clientConfig,\n        _apiUrl = _client$clientConfig.apiHost,\n        _projectId = _client$clientConfig.projectId,\n        _dataset = _client$clientConfig.dataset;\n      var _apiHost = _apiUrl || 'https://api.sanity.io';\n      return new ImageUrlBuilder(null, {\n        baseUrl: _apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n        projectId: _projectId,\n        dataset: _dataset\n      });\n    } // Or just accept the options as given\n\n    return new ImageUrlBuilder(null, options);\n  }\n  var ImageUrlBuilder = /*#__PURE__*/function () {\n    function ImageUrlBuilder(parent, options) {\n      this.options = void 0;\n      this.options = parent ? _extends({}, parent.options || {}, options || {}) // Merge parent options\n      : _extends({}, options || {}); // Copy options\n    }\n\n    var _proto = ImageUrlBuilder.prototype;\n    _proto.withOptions = function withOptions(options) {\n      var baseUrl = options.baseUrl || this.options.baseUrl;\n      var newOptions = {\n        baseUrl: baseUrl\n      };\n      for (var key in options) {\n        if (options.hasOwnProperty(key)) {\n          var specKey = rewriteSpecName(key);\n          newOptions[specKey] = options[key];\n        }\n      }\n      return new ImageUrlBuilder(this, _extends({\n        baseUrl: baseUrl\n      }, newOptions));\n    } // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n    // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n    // studio, the 'image'-document must be provided.\n    ;\n\n    _proto.image = function image(source) {\n      return this.withOptions({\n        source: source\n      });\n    } // Specify the dataset\n    ;\n\n    _proto.dataset = function dataset(_dataset2) {\n      return this.withOptions({\n        dataset: _dataset2\n      });\n    } // Specify the projectId\n    ;\n\n    _proto.projectId = function projectId(_projectId2) {\n      return this.withOptions({\n        projectId: _projectId2\n      });\n    } // Specify background color\n    ;\n\n    _proto.bg = function bg(_bg) {\n      return this.withOptions({\n        bg: _bg\n      });\n    } // Set DPR scaling factor\n    ;\n\n    _proto.dpr = function dpr(_dpr) {\n      // A DPR of 1 is the default - so only include it if we have a different value\n      return this.withOptions(_dpr && _dpr !== 1 ? {\n        dpr: _dpr\n      } : {});\n    } // Specify the width of the image in pixels\n    ;\n\n    _proto.width = function width(_width) {\n      return this.withOptions({\n        width: _width\n      });\n    } // Specify the height of the image in pixels\n    ;\n\n    _proto.height = function height(_height) {\n      return this.withOptions({\n        height: _height\n      });\n    } // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n    ;\n\n    _proto.focalPoint = function focalPoint(x, y) {\n      return this.withOptions({\n        focalPoint: {\n          x: x,\n          y: y\n        }\n      });\n    };\n    _proto.maxWidth = function maxWidth(_maxWidth) {\n      return this.withOptions({\n        maxWidth: _maxWidth\n      });\n    };\n    _proto.minWidth = function minWidth(_minWidth) {\n      return this.withOptions({\n        minWidth: _minWidth\n      });\n    };\n    _proto.maxHeight = function maxHeight(_maxHeight) {\n      return this.withOptions({\n        maxHeight: _maxHeight\n      });\n    };\n    _proto.minHeight = function minHeight(_minHeight) {\n      return this.withOptions({\n        minHeight: _minHeight\n      });\n    } // Specify width and height in pixels\n    ;\n\n    _proto.size = function size(width, height) {\n      return this.withOptions({\n        width: width,\n        height: height\n      });\n    } // Specify blur between 0 and 100\n    ;\n\n    _proto.blur = function blur(_blur) {\n      return this.withOptions({\n        blur: _blur\n      });\n    };\n    _proto.sharpen = function sharpen(_sharpen) {\n      return this.withOptions({\n        sharpen: _sharpen\n      });\n    } // Specify the desired rectangle of the image\n    ;\n\n    _proto.rect = function rect(left, top, width, height) {\n      return this.withOptions({\n        rect: {\n          left: left,\n          top: top,\n          width: width,\n          height: height\n        }\n      });\n    } // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n    ;\n\n    _proto.format = function format(_format) {\n      return this.withOptions({\n        format: _format\n      });\n    };\n    _proto.invert = function invert(_invert) {\n      return this.withOptions({\n        invert: _invert\n      });\n    } // Rotation in degrees 0, 90, 180, 270\n    ;\n\n    _proto.orientation = function orientation(_orientation) {\n      return this.withOptions({\n        orientation: _orientation\n      });\n    } // Compression quality 0-100\n    ;\n\n    _proto.quality = function quality(_quality) {\n      return this.withOptions({\n        quality: _quality\n      });\n    } // Make it a download link. Parameter is default filename.\n    ;\n\n    _proto.forceDownload = function forceDownload(download) {\n      return this.withOptions({\n        download: download\n      });\n    } // Flip image horizontally\n    ;\n\n    _proto.flipHorizontal = function flipHorizontal() {\n      return this.withOptions({\n        flipHorizontal: true\n      });\n    } // Flip image vertically\n    ;\n\n    _proto.flipVertical = function flipVertical() {\n      return this.withOptions({\n        flipVertical: true\n      });\n    } // Ignore crop/hotspot from image record, even when present\n    ;\n\n    _proto.ignoreImageParams = function ignoreImageParams() {\n      return this.withOptions({\n        ignoreImageParams: true\n      });\n    };\n    _proto.fit = function fit(value) {\n      if (validFits.indexOf(value) === -1) {\n        throw new Error(\"Invalid fit mode \\\"\" + value + \"\\\"\");\n      }\n      return this.withOptions({\n        fit: value\n      });\n    };\n    _proto.crop = function crop(value) {\n      if (validCrops.indexOf(value) === -1) {\n        throw new Error(\"Invalid crop mode \\\"\" + value + \"\\\"\");\n      }\n      return this.withOptions({\n        crop: value\n      });\n    } // Saturation\n    ;\n\n    _proto.saturation = function saturation(_saturation) {\n      return this.withOptions({\n        saturation: _saturation\n      });\n    };\n    _proto.auto = function auto(value) {\n      if (validAutoModes.indexOf(value) === -1) {\n        throw new Error(\"Invalid auto mode \\\"\" + value + \"\\\"\");\n      }\n      return this.withOptions({\n        auto: value\n      });\n    } // Specify the number of pixels to pad the image\n    ;\n\n    _proto.pad = function pad(_pad) {\n      return this.withOptions({\n        pad: _pad\n      });\n    } // Gets the url based on the submitted parameters\n    ;\n\n    _proto.url = function url() {\n      return urlForImage(this.options);\n    } // Alias for url()\n    ;\n\n    _proto.toString = function toString() {\n      return this.url();\n    };\n    return ImageUrlBuilder;\n  }();\n  return urlBuilder;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","self","SanityImageUrlBuilder","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","example","parseAssetId","ref","_ref$split","split","id","dimensionString","format","Error","_dimensionString$spli","imgWidthStr","imgHeightStr","width","height","isValidAssetId","isFinite","isRef","src","_ref","isAsset","_id","isAssetStub","asset","url","parseSource","image","isUrl","urlToId","img","crop","hotspot","applyDefaults","parts","replace","result","left","top","bottom","right","x","y","SPEC_NAME_TO_URL_NAME_MAPPINGS","urlForImage","options","spec","JSON","stringify","cropLeft","Math","round","cropTop","hotSpotVerticalRadius","hotSpotHorizontalRadius","hotSpotCenterX","hotSpotCenterY","rect","focalPoint","ignoreImageParams","fit","specToImageUrl","cdnUrl","baseUrl","filename","projectId","dataset","params","_spec$rect","isEffectiveCrop","push","bg","flip","flipHorizontal","flipVertical","filter","Boolean","join","forEach","mapping","specName","param","encodeURIComponent","cropRect","imgWidth","imgHeight","desiredAspectRatio","cropAspectRatio","max","hotspotXCenter","_width","_height","_left","hotspotYCenter","_top","validFits","validCrops","validAutoModes","isSanityModernClientLike","client","config","isSanityClientLike","clientConfig","rewriteSpecName","specs","_iterator","_step","entry","urlBuilder","_options$config","apiUrl","apiHost","ImageUrlBuilder","_client$clientConfig","_apiUrl","_projectId","_dataset","_apiHost","parent","_proto","withOptions","newOptions","specKey","_dataset2","_projectId2","_bg","dpr","_dpr","maxWidth","_maxWidth","minWidth","_minWidth","maxHeight","_maxHeight","minHeight","_minHeight","size","blur","_blur","sharpen","_sharpen","_format","invert","_invert","orientation","_orientation","quality","_quality","forceDownload","download","indexOf","saturation","_saturation","auto","pad","_pad"],"sources":["/Users/hany/work/development/angular/tutorials/spa-angular-sanity/node_modules/@sanity/image-url/lib/browser/image-url.umd.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.SanityImageUrlBuilder = factory());\n})(this, (function () {\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg';\n  function parseAssetId(ref) {\n    var _ref$split = ref.split('-'),\n        id = _ref$split[1],\n        dimensionString = _ref$split[2],\n        format = _ref$split[3];\n\n    if (!id || !dimensionString || !format) {\n      throw new Error(\"Malformed asset _ref '\" + ref + \"'. Expected an id like \\\"\" + example + \"\\\".\");\n    }\n\n    var _dimensionString$spli = dimensionString.split('x'),\n        imgWidthStr = _dimensionString$spli[0],\n        imgHeightStr = _dimensionString$spli[1];\n\n    var width = +imgWidthStr;\n    var height = +imgHeightStr;\n    var isValidAssetId = isFinite(width) && isFinite(height);\n\n    if (!isValidAssetId) {\n      throw new Error(\"Malformed asset _ref '\" + ref + \"'. Expected an id like \\\"\" + example + \"\\\".\");\n    }\n\n    return {\n      id: id,\n      width: width,\n      height: height,\n      format: format\n    };\n  }\n\n  var isRef = function isRef(src) {\n    var source = src;\n    return source ? typeof source._ref === 'string' : false;\n  };\n\n  var isAsset = function isAsset(src) {\n    var source = src;\n    return source ? typeof source._id === 'string' : false;\n  };\n\n  var isAssetStub = function isAssetStub(src) {\n    var source = src;\n    return source && source.asset ? typeof source.asset.url === 'string' : false;\n  }; // Convert an asset-id, asset or image to an image record suitable for processing\n  // eslint-disable-next-line complexity\n\n\n  function parseSource(source) {\n    if (!source) {\n      return null;\n    }\n\n    var image;\n\n    if (typeof source === 'string' && isUrl(source)) {\n      // Someone passed an existing image url?\n      image = {\n        asset: {\n          _ref: urlToId(source)\n        }\n      };\n    } else if (typeof source === 'string') {\n      // Just an asset id\n      image = {\n        asset: {\n          _ref: source\n        }\n      };\n    } else if (isRef(source)) {\n      // We just got passed an asset directly\n      image = {\n        asset: source\n      };\n    } else if (isAsset(source)) {\n      // If we were passed an image asset document\n      image = {\n        asset: {\n          _ref: source._id || ''\n        }\n      };\n    } else if (isAssetStub(source)) {\n      // If we were passed a partial asset (`url`, but no `_id`)\n      image = {\n        asset: {\n          _ref: urlToId(source.asset.url)\n        }\n      };\n    } else if (typeof source.asset === 'object') {\n      // Probably an actual image with materialized asset\n      image = _extends({}, source);\n    } else {\n      // We got something that does not look like an image, or it is an image\n      // that currently isn't sporting an asset.\n      return null;\n    }\n\n    var img = source;\n\n    if (img.crop) {\n      image.crop = img.crop;\n    }\n\n    if (img.hotspot) {\n      image.hotspot = img.hotspot;\n    }\n\n    return applyDefaults(image);\n  }\n\n  function isUrl(url) {\n    return /^https?:\\/\\//.test(\"\" + url);\n  }\n\n  function urlToId(url) {\n    var parts = url.split('/').slice(-1);\n    return (\"image-\" + parts[0]).replace(/\\.([a-z]+)$/, '-$1');\n  } // Mock crop and hotspot if image lacks it\n\n\n  function applyDefaults(image) {\n    if (image.crop && image.hotspot) {\n      return image;\n    } // We need to pad in default values for crop or hotspot\n\n\n    var result = _extends({}, image);\n\n    if (!result.crop) {\n      result.crop = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0\n      };\n    }\n\n    if (!result.hotspot) {\n      result.hotspot = {\n        x: 0.5,\n        y: 0.5,\n        height: 1.0,\n        width: 1.0\n      };\n    }\n\n    return result;\n  }\n\n  var SPEC_NAME_TO_URL_NAME_MAPPINGS = [['width', 'w'], ['height', 'h'], ['format', 'fm'], ['download', 'dl'], ['blur', 'blur'], ['sharpen', 'sharp'], ['invert', 'invert'], ['orientation', 'or'], ['minHeight', 'min-h'], ['maxHeight', 'max-h'], ['minWidth', 'min-w'], ['maxWidth', 'max-w'], ['quality', 'q'], ['fit', 'fit'], ['crop', 'crop'], ['saturation', 'sat'], ['auto', 'auto'], ['dpr', 'dpr'], ['pad', 'pad']];\n  function urlForImage(options) {\n    var spec = _extends({}, options || {});\n\n    var source = spec.source;\n    delete spec.source;\n    var image = parseSource(source);\n\n    if (!image) {\n      throw new Error(\"Unable to resolve image URL from source (\" + JSON.stringify(source) + \")\");\n    }\n\n    var id = image.asset._ref || image.asset._id || '';\n    var asset = parseAssetId(id); // Compute crop rect in terms of pixel coordinates in the raw source image\n\n    var cropLeft = Math.round(image.crop.left * asset.width);\n    var cropTop = Math.round(image.crop.top * asset.height);\n    var crop = {\n      left: cropLeft,\n      top: cropTop,\n      width: Math.round(asset.width - image.crop.right * asset.width - cropLeft),\n      height: Math.round(asset.height - image.crop.bottom * asset.height - cropTop)\n    }; // Compute hot spot rect in terms of pixel coordinates\n\n    var hotSpotVerticalRadius = image.hotspot.height * asset.height / 2;\n    var hotSpotHorizontalRadius = image.hotspot.width * asset.width / 2;\n    var hotSpotCenterX = image.hotspot.x * asset.width;\n    var hotSpotCenterY = image.hotspot.y * asset.height;\n    var hotspot = {\n      left: hotSpotCenterX - hotSpotHorizontalRadius,\n      top: hotSpotCenterY - hotSpotVerticalRadius,\n      right: hotSpotCenterX + hotSpotHorizontalRadius,\n      bottom: hotSpotCenterY + hotSpotVerticalRadius\n    }; // If irrelevant, or if we are requested to: don't perform crop/fit based on\n    // the crop/hotspot.\n\n    if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n      spec = _extends({}, spec, fit({\n        crop: crop,\n        hotspot: hotspot\n      }, spec));\n    }\n\n    return specToImageUrl(_extends({}, spec, {\n      asset: asset\n    }));\n  } // eslint-disable-next-line complexity\n\n  function specToImageUrl(spec) {\n    var cdnUrl = (spec.baseUrl || 'https://cdn.sanity.io').replace(/\\/+$/, '');\n    var filename = spec.asset.id + \"-\" + spec.asset.width + \"x\" + spec.asset.height + \".\" + spec.asset.format;\n    var baseUrl = cdnUrl + \"/images/\" + spec.projectId + \"/\" + spec.dataset + \"/\" + filename;\n    var params = [];\n\n    if (spec.rect) {\n      // Only bother url with a crop if it actually crops anything\n      var _spec$rect = spec.rect,\n          left = _spec$rect.left,\n          top = _spec$rect.top,\n          width = _spec$rect.width,\n          height = _spec$rect.height;\n      var isEffectiveCrop = left !== 0 || top !== 0 || height !== spec.asset.height || width !== spec.asset.width;\n\n      if (isEffectiveCrop) {\n        params.push(\"rect=\" + left + \",\" + top + \",\" + width + \",\" + height);\n      }\n    }\n\n    if (spec.bg) {\n      params.push(\"bg=\" + spec.bg);\n    }\n\n    if (spec.focalPoint) {\n      params.push(\"fp-x=\" + spec.focalPoint.x);\n      params.push(\"fp-y=\" + spec.focalPoint.y);\n    }\n\n    var flip = [spec.flipHorizontal && 'h', spec.flipVertical && 'v'].filter(Boolean).join('');\n\n    if (flip) {\n      params.push(\"flip=\" + flip);\n    } // Map from spec name to url param name, and allow using the actual param name as an alternative\n\n\n    SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function (mapping) {\n      var specName = mapping[0],\n          param = mapping[1];\n\n      if (typeof spec[specName] !== 'undefined') {\n        params.push(param + \"=\" + encodeURIComponent(spec[specName]));\n      } else if (typeof spec[param] !== 'undefined') {\n        params.push(param + \"=\" + encodeURIComponent(spec[param]));\n      }\n    });\n\n    if (params.length === 0) {\n      return baseUrl;\n    }\n\n    return baseUrl + \"?\" + params.join('&');\n  }\n\n  function fit(source, spec) {\n    var cropRect;\n    var imgWidth = spec.width;\n    var imgHeight = spec.height; // If we are not constraining the aspect ratio, we'll just use the whole crop\n\n    if (!(imgWidth && imgHeight)) {\n      return {\n        width: imgWidth,\n        height: imgHeight,\n        rect: source.crop\n      };\n    }\n\n    var crop = source.crop;\n    var hotspot = source.hotspot; // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n\n    var desiredAspectRatio = imgWidth / imgHeight;\n    var cropAspectRatio = crop.width / crop.height;\n\n    if (cropAspectRatio > desiredAspectRatio) {\n      // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n      var height = Math.round(crop.height);\n      var width = Math.round(height * desiredAspectRatio);\n      var top = Math.max(0, Math.round(crop.top)); // Center output horizontally over hotspot\n\n      var hotspotXCenter = Math.round((hotspot.right - hotspot.left) / 2 + hotspot.left);\n      var left = Math.max(0, Math.round(hotspotXCenter - width / 2)); // Keep output within crop\n\n      if (left < crop.left) {\n        left = crop.left;\n      } else if (left + width > crop.left + crop.width) {\n        left = crop.left + crop.width - width;\n      }\n\n      cropRect = {\n        left: left,\n        top: top,\n        width: width,\n        height: height\n      };\n    } else {\n      // The crop is taller than the desired ratio, we are cutting from top and bottom\n      var _width = crop.width;\n\n      var _height = Math.round(_width / desiredAspectRatio);\n\n      var _left = Math.max(0, Math.round(crop.left)); // Center output vertically over hotspot\n\n\n      var hotspotYCenter = Math.round((hotspot.bottom - hotspot.top) / 2 + hotspot.top);\n\n      var _top = Math.max(0, Math.round(hotspotYCenter - _height / 2)); // Keep output rect within crop\n\n\n      if (_top < crop.top) {\n        _top = crop.top;\n      } else if (_top + _height > crop.top + crop.height) {\n        _top = crop.top + crop.height - _height;\n      }\n\n      cropRect = {\n        left: _left,\n        top: _top,\n        width: _width,\n        height: _height\n      };\n    }\n\n    return {\n      width: imgWidth,\n      height: imgHeight,\n      rect: cropRect\n    };\n  } // For backwards-compatibility\n\n  var validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min'];\n  var validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy'];\n  var validAutoModes = ['format'];\n\n  function isSanityModernClientLike(client) {\n    return client && 'config' in client ? typeof client.config === 'function' : false;\n  }\n\n  function isSanityClientLike(client) {\n    return client && 'clientConfig' in client ? typeof client.clientConfig === 'object' : false;\n  }\n\n  function rewriteSpecName(key) {\n    var specs = SPEC_NAME_TO_URL_NAME_MAPPINGS;\n\n    for (var _iterator = _createForOfIteratorHelperLoose(specs), _step; !(_step = _iterator()).done;) {\n      var entry = _step.value;\n      var specName = entry[0],\n          param = entry[1];\n\n      if (key === specName || key === param) {\n        return specName;\n      }\n    }\n\n    return key;\n  }\n\n  function urlBuilder(options) {\n    // Did we get a modernish client?\n    if (isSanityModernClientLike(options)) {\n      // Inherit config from client\n      var _options$config = options.config(),\n          apiUrl = _options$config.apiHost,\n          projectId = _options$config.projectId,\n          dataset = _options$config.dataset;\n\n      var apiHost = apiUrl || 'https://api.sanity.io';\n      return new ImageUrlBuilder(null, {\n        baseUrl: apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n        projectId: projectId,\n        dataset: dataset\n      });\n    } // Did we get a SanityClient?\n\n\n    var client = options;\n\n    if (isSanityClientLike(client)) {\n      // Inherit config from client\n      var _client$clientConfig = client.clientConfig,\n          _apiUrl = _client$clientConfig.apiHost,\n          _projectId = _client$clientConfig.projectId,\n          _dataset = _client$clientConfig.dataset;\n\n      var _apiHost = _apiUrl || 'https://api.sanity.io';\n\n      return new ImageUrlBuilder(null, {\n        baseUrl: _apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n        projectId: _projectId,\n        dataset: _dataset\n      });\n    } // Or just accept the options as given\n\n\n    return new ImageUrlBuilder(null, options);\n  }\n  var ImageUrlBuilder = /*#__PURE__*/function () {\n    function ImageUrlBuilder(parent, options) {\n      this.options = void 0;\n      this.options = parent ? _extends({}, parent.options || {}, options || {}) // Merge parent options\n      : _extends({}, options || {}); // Copy options\n    }\n\n    var _proto = ImageUrlBuilder.prototype;\n\n    _proto.withOptions = function withOptions(options) {\n      var baseUrl = options.baseUrl || this.options.baseUrl;\n      var newOptions = {\n        baseUrl: baseUrl\n      };\n\n      for (var key in options) {\n        if (options.hasOwnProperty(key)) {\n          var specKey = rewriteSpecName(key);\n          newOptions[specKey] = options[key];\n        }\n      }\n\n      return new ImageUrlBuilder(this, _extends({\n        baseUrl: baseUrl\n      }, newOptions));\n    } // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n    // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n    // studio, the 'image'-document must be provided.\n    ;\n\n    _proto.image = function image(source) {\n      return this.withOptions({\n        source: source\n      });\n    } // Specify the dataset\n    ;\n\n    _proto.dataset = function dataset(_dataset2) {\n      return this.withOptions({\n        dataset: _dataset2\n      });\n    } // Specify the projectId\n    ;\n\n    _proto.projectId = function projectId(_projectId2) {\n      return this.withOptions({\n        projectId: _projectId2\n      });\n    } // Specify background color\n    ;\n\n    _proto.bg = function bg(_bg) {\n      return this.withOptions({\n        bg: _bg\n      });\n    } // Set DPR scaling factor\n    ;\n\n    _proto.dpr = function dpr(_dpr) {\n      // A DPR of 1 is the default - so only include it if we have a different value\n      return this.withOptions(_dpr && _dpr !== 1 ? {\n        dpr: _dpr\n      } : {});\n    } // Specify the width of the image in pixels\n    ;\n\n    _proto.width = function width(_width) {\n      return this.withOptions({\n        width: _width\n      });\n    } // Specify the height of the image in pixels\n    ;\n\n    _proto.height = function height(_height) {\n      return this.withOptions({\n        height: _height\n      });\n    } // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n    ;\n\n    _proto.focalPoint = function focalPoint(x, y) {\n      return this.withOptions({\n        focalPoint: {\n          x: x,\n          y: y\n        }\n      });\n    };\n\n    _proto.maxWidth = function maxWidth(_maxWidth) {\n      return this.withOptions({\n        maxWidth: _maxWidth\n      });\n    };\n\n    _proto.minWidth = function minWidth(_minWidth) {\n      return this.withOptions({\n        minWidth: _minWidth\n      });\n    };\n\n    _proto.maxHeight = function maxHeight(_maxHeight) {\n      return this.withOptions({\n        maxHeight: _maxHeight\n      });\n    };\n\n    _proto.minHeight = function minHeight(_minHeight) {\n      return this.withOptions({\n        minHeight: _minHeight\n      });\n    } // Specify width and height in pixels\n    ;\n\n    _proto.size = function size(width, height) {\n      return this.withOptions({\n        width: width,\n        height: height\n      });\n    } // Specify blur between 0 and 100\n    ;\n\n    _proto.blur = function blur(_blur) {\n      return this.withOptions({\n        blur: _blur\n      });\n    };\n\n    _proto.sharpen = function sharpen(_sharpen) {\n      return this.withOptions({\n        sharpen: _sharpen\n      });\n    } // Specify the desired rectangle of the image\n    ;\n\n    _proto.rect = function rect(left, top, width, height) {\n      return this.withOptions({\n        rect: {\n          left: left,\n          top: top,\n          width: width,\n          height: height\n        }\n      });\n    } // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n    ;\n\n    _proto.format = function format(_format) {\n      return this.withOptions({\n        format: _format\n      });\n    };\n\n    _proto.invert = function invert(_invert) {\n      return this.withOptions({\n        invert: _invert\n      });\n    } // Rotation in degrees 0, 90, 180, 270\n    ;\n\n    _proto.orientation = function orientation(_orientation) {\n      return this.withOptions({\n        orientation: _orientation\n      });\n    } // Compression quality 0-100\n    ;\n\n    _proto.quality = function quality(_quality) {\n      return this.withOptions({\n        quality: _quality\n      });\n    } // Make it a download link. Parameter is default filename.\n    ;\n\n    _proto.forceDownload = function forceDownload(download) {\n      return this.withOptions({\n        download: download\n      });\n    } // Flip image horizontally\n    ;\n\n    _proto.flipHorizontal = function flipHorizontal() {\n      return this.withOptions({\n        flipHorizontal: true\n      });\n    } // Flip image vertically\n    ;\n\n    _proto.flipVertical = function flipVertical() {\n      return this.withOptions({\n        flipVertical: true\n      });\n    } // Ignore crop/hotspot from image record, even when present\n    ;\n\n    _proto.ignoreImageParams = function ignoreImageParams() {\n      return this.withOptions({\n        ignoreImageParams: true\n      });\n    };\n\n    _proto.fit = function fit(value) {\n      if (validFits.indexOf(value) === -1) {\n        throw new Error(\"Invalid fit mode \\\"\" + value + \"\\\"\");\n      }\n\n      return this.withOptions({\n        fit: value\n      });\n    };\n\n    _proto.crop = function crop(value) {\n      if (validCrops.indexOf(value) === -1) {\n        throw new Error(\"Invalid crop mode \\\"\" + value + \"\\\"\");\n      }\n\n      return this.withOptions({\n        crop: value\n      });\n    } // Saturation\n    ;\n\n    _proto.saturation = function saturation(_saturation) {\n      return this.withOptions({\n        saturation: _saturation\n      });\n    };\n\n    _proto.auto = function auto(value) {\n      if (validAutoModes.indexOf(value) === -1) {\n        throw new Error(\"Invalid auto mode \\\"\" + value + \"\\\"\");\n      }\n\n      return this.withOptions({\n        auto: value\n      });\n    } // Specify the number of pixels to pad the image\n    ;\n\n    _proto.pad = function pad(_pad) {\n      return this.withOptions({\n        pad: _pad\n      });\n    } // Gets the url based on the submitted parameters\n    ;\n\n    _proto.url = function url() {\n      return urlForImage(this.options);\n    } // Alias for url()\n    ;\n\n    _proto.toString = function toString() {\n      return this.url();\n    };\n\n    return ImageUrlBuilder;\n  }();\n\n  return urlBuilder;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}