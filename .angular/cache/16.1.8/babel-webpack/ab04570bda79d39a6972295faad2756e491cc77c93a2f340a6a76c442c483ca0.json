{"ast":null,"code":"import _asyncToGenerator from \"/Users/hany/work/development/angular/tutorials/spa-angular-sanity/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport sanityClient from '@sanity/client';\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport * as i0 from \"@angular/core\";\nexport class SanityService {\n  constructor() {\n    this.sanityClientCredentials = {\n      option: sanityClient({\n        projectId: \"eefg2pox\",\n        dataset: \"production\"\n      })\n    };\n    this.urlFor = source => imageUrlBuilder(this.sanityClientCredentials.option).image(source);\n  }\n  getMovies() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield _this.sanityClientCredentials.option.fetch(`*[_type == \"movie\"]{\n        _id,\n    title,\n    overview,\n    releaseDate,\n    poster\n  }`);\n    })();\n  }\n  getActors() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this2.sanityClientCredentials.option.fetch(`*[_type == \"person\"]{\n        _id,\n    name,\n    image\n  }`);\n    })();\n  }\n}\nSanityService.ɵfac = function SanityService_Factory(t) {\n  return new (t || SanityService)();\n};\nSanityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SanityService,\n  factory: SanityService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["sanityClient","imageUrlBuilder","SanityService","constructor","sanityClientCredentials","option","projectId","dataset","urlFor","source","image","getMovies","_this","_asyncToGenerator","fetch","getActors","_this2","factory","ɵfac","providedIn"],"sources":["/Users/hany/work/development/angular/tutorials/spa-angular-sanity/src/app/service/sanity.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport sanityClient from '@sanity/client';\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport { Actor } from '../actor';\nimport { Movie } from '../movie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SanityService {\n\n  constructor() { }\n\n  sanityClientCredentials = {\n    option: sanityClient({\n      projectId: \"eefg2pox\",\n      dataset: \"production\"\n    })\n  }\n\n  urlFor = (source: any) =>\n  imageUrlBuilder(this.sanityClientCredentials.option).image(source);\n\n  async getMovies(): Promise<Movie[]> {\n    return await this.sanityClientCredentials.option.fetch(\n      `*[_type == \"movie\"]{\n        _id,\n    title,\n    overview,\n    releaseDate,\n    poster\n  }`\n    );\n  }\n\n\n  async getActors(): Promise<Actor[]> {\n    return await this.sanityClientCredentials.option.fetch(\n      `*[_type == \"person\"]{\n        _id,\n    name,\n    image\n  }`\n    );\n  }\n} "],"mappings":";AACA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAOC,eAAe,MAAM,mBAAmB;;AAO/C,OAAM,MAAOC,aAAa;EAExBC,YAAA;IAEA,KAAAC,uBAAuB,GAAG;MACxBC,MAAM,EAAEL,YAAY,CAAC;QACnBM,SAAS,EAAE,UAAU;QACrBC,OAAO,EAAE;OACV;KACF;IAED,KAAAC,MAAM,GAAIC,MAAW,IACrBR,eAAe,CAAC,IAAI,CAACG,uBAAuB,CAACC,MAAM,CAAC,CAACK,KAAK,CAACD,MAAM,CAAC;EAVlD;EAYVE,SAASA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACb,aAAaD,KAAI,CAACR,uBAAuB,CAACC,MAAM,CAACS,KAAK,CACpD;;;;;;IAMF,CACC;IAAC;EACJ;EAGMC,SAASA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAH,iBAAA;MACb,aAAaG,MAAI,CAACZ,uBAAuB,CAACC,MAAM,CAACS,KAAK,CACpD;;;;IAIF,CACC;IAAC;EACJ;;AAnCWZ,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;SAAbA,aAAa;EAAAe,OAAA,EAAbf,aAAa,CAAAgB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}